{"version":3,"sources":["./src/app/cart/cart.page.html","./src/app/cart/cart.module.ts","./src/app/cart/cart.page.scss","./src/app/cart/cart.page.ts"],"names":[],"mappings":"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","file":"cart-cart-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\"> <ion-menu-button></ion-menu-button> </ion-buttons>\\n        <ion-title>Carrinho de Compras</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-list>\\n\\n        <ion-item-sliding *ngFor=\\\"let item of items\\\">\\n            <ion-item>\\n                <ion-label>\\n                    {{item.product.factory.name}} {{item.product.name}}\\n                    <p>{{item.amount}} un * {{item.price.toFixed(2)}} = R$ {{item.price.toFixed(2)}}</p>\\n                </ion-label>\\n            </ion-item>\\n\\n            <ion-item-options side=\\\"end\\\">\\n                <ion-item-option color=\\\"danger\\\" expandable>\\n                    <ion-icon name=\\\"trash\\\" size=\\\"large\\\" (click)=\\\"delete(item)\\\"></ion-icon>\\n                </ion-item-option>\\n            </ion-item-options>\\n        </ion-item-sliding>\\n\\n        <ion-item>\\n            <ion-label>Total do Pedido: R$ {{total.toFixed(2)}}</ion-label>\\n        </ion-item>\\n\\n    </ion-list>\\n\\n    <ion-button expand=\\\"block\\\" (click)=\\\"invoice()\\\"> Fechar o Pedido </ion-button>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartPage } from './cart.page';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild([\n            { path: '', component: CartPage }\n        ])\n    ],\n    declarations: [CartPage]\n})\nexport class CartPageModule {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Item } from 'src/model/item';\nimport { CartService } from '../services/cart.service';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BASE_URL, HttpCode } from 'src/utils/constants';\nimport { SalesOrder } from 'src/model/sales.order';\n\n@Component({\n    selector: 'app-cart',\n    templateUrl: './cart.page.html',\n    styleUrls: ['./cart.page.scss'],\n})\nexport class CartPage implements OnInit {\n\n    private token: string;\n    private items: Item[];\n    private total: number;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private cartService: CartService,\n        private http: HttpClient\n    ) {}\n\n    ngOnInit() {\n        this.items = this.route.snapshot.data['items'];\n        this.token = this.route.snapshot.data['token'];\n\n        let total: number = 0.0;\n        this.items.forEach((item: Item) => {\n            total += item.price * item.amount;\n        });\n        this.total = total;\n    }\n    \n    invoice(): void {\n        if (this.isEmpty()) return;\n\n        const options = {\n            headers: { Authorization: \"Bearer \"+this.token }\n        };\n\n        this.http.post(BASE_URL+\"sales/order/invoice\", this.items, options)\n        .subscribe((data: SalesOrder) => {\n            console.log(data);\n            this.cartService.clear();\n            this.router.navigate(['list']);\n\n        }, (error: any) => {\n            console.error(error);\n            if (error.status === HttpCode.BAD_REQUEST) {\n                alert(error.error);\n                this.router.navigate(['login']);\n            } else if (error.status === HttpCode.FORBIDDEN) {\n                alert(\"VocÃª precisa logar para fechar o pedido!\");\n                this.router.navigate(['login']);\n            } else {\n                alert(\"Erro ao buscar os pedidos: \"+error.error);\n            }\n        });\n    }\n\n    isEmpty(): boolean {\n        return (this.items.length <= 0);\n    }\n\n    delete(item: Item): void {\n        this.cartService.remove(item).then((items: Item[]) => {\n            this.items = items;\n        });\n    }\n\n}"],"sourceRoot":""}