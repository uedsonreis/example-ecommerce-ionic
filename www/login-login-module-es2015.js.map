{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts","./src/model/customer.ts","./src/model/user.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\"> <ion-menu-button></ion-menu-button> </ion-buttons>\\n        <ion-title>Autenticar</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-segment (ionChange)=\\\"segmentChanged($event)\\\">\\n        <ion-segment-button value=\\\"login\\\" checked>\\n            <ion-label>Entrar</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"signup\\\">\\n            <ion-label>Registrar</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n\\n    <ion-list *ngIf=\\\"!isSignup\\\">\\n        <ion-item>\\n            <ion-label>Email</ion-label>\\n            <ion-input type=\\\"email\\\" required=\\\"true\\\" [(ngModel)]=\\\"user.login\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>Senha</ion-label>\\n            <ion-input type=\\\"password\\\" required=\\\"true\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n        </ion-item>\\n        <ion-button expand=\\\"block\\\" (click)=\\\"login()\\\">Entrar</ion-button>\\n    </ion-list>\\n\\n    <ion-list *ngIf=\\\"isSignup\\\">\\n        <ion-item>\\n            <ion-label>Email</ion-label>\\n            <ion-input type=\\\"email\\\" required=\\\"true\\\" [(ngModel)]=\\\"customer.email\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>Senha</ion-label>\\n            <ion-input type=\\\"password\\\" required=\\\"true\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>Confirmar Senha</ion-label>\\n            <ion-input type=\\\"password\\\" required=\\\"true\\\" [(ngModel)]=\\\"confirmPassword\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>Nome</ion-label>\\n            <ion-input type=\\\"text\\\" required=\\\"true\\\" [(ngModel)]=\\\"customer.name\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>Idade</ion-label>\\n            <ion-input type=\\\"number\\\" required=\\\"true\\\" [(ngModel)]=\\\"customer.age\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>Endereço</ion-label>\\n            <ion-input type=\\\"text\\\" required=\\\"false\\\" [(ngModel)]=\\\"customer.address\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-button expand=\\\"block\\\" (click)=\\\"signup()\\\">Registrar</ion-button>\\n    </ion-list>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild([\n            { path: '', component: LoginPage }\n        ])\n    ],\n    declarations: [LoginPage]\n})\nexport class LoginPageModule {}","module.exports = \"ion-segment {\\n  padding: 1px;\\n}\\n\\nion-button {\\n  margin: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91ZWRzb25yZWlzL0RvY3VtZW50cy9Qcm9qZXRvcy9mYWN1bGRhZGVzL2V4YW1wbGUtZWNvbW1lcmNlLWlvbmljL3NyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2VnbWVudCB7XG4gICAgcGFkZGluZzogMXB4O1xufVxuXG5pb24tYnV0dG9uIHtcbiAgICBtYXJnaW46IDE1cHg7XG59IiwiaW9uLXNlZ21lbnQge1xuICBwYWRkaW5nOiAxcHg7XG59XG5cbmlvbi1idXR0b24ge1xuICBtYXJnaW46IDE1cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/model/user';\nimport { Customer } from 'src/model/customer';\nimport { UserService } from '../services/user.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { BASE_URL } from '../../utils/constants';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n    private static readonly SIGNUP: string = \"signup\";\n\n    private isSignup: boolean = false;\n\n    private user: User;\n    private customer: Customer;\n    private confirmPassword: string = \"\";\n\n    constructor(private http: HttpClient, private userService: UserService, private router: Router) {}\n\n    ngOnInit() {\n        this.user = new User();\n        this.customer = new Customer();\n    }\n\n    private signup(): void {\n        if (!this.validateForm()) return;\n\n        this.user.login = this.customer.email;\n        this.customer.user = this.user;\n\n        this.http.post(BASE_URL+'user/customer/add', this.customer, { responseType: \"text\" })\n        .subscribe(this.successCallback, (error: any) => alert(error.error));\n    }\n\n    private login(): void {\n        this.http.post(BASE_URL+\"user/login\", this.user, { responseType: \"text\" })\n        .subscribe(this.successCallback, (error: any) => alert(\"Email / Senha inválido(a)!\"));\n    }\n\n    private successCallback = (token: string) => {\n        this.userService.login(this.user.login, token).then(() => {\n            this.router.navigate(['home/tab2']);\n        });\n    };\n\n    private validateForm(): boolean {\n        if (this.customer.email === undefined || this.customer.email.trim() === '') {\n            alert(\"Este email é inválido!\");\n            return false;\n        }\n        if (!this.customer.email.includes(\"@\") || !this.customer.email.includes(\".\")) {\n            alert(\"Este email é inválido!\");\n            return false;\n        }\n        if (this.customer.age === undefined || this.customer.age <= 0) {\n            alert(\"Esta idade não é permitida!\");\n            return false;\n        }\n        if (this.user.password !== this.confirmPassword) {\n            alert(\"As senhas não conferem!\");\n            return false;\n        }\n        return true;\n    }\n\n    private segmentChanged(event: CustomEvent): void {\n        if (event.detail.value === LoginPage.SIGNUP) {\n            this.isSignup = true;\n        } else {\n            this.isSignup = false;\n        }\n    }\n\n}","import { User } from \"./user\";\n\nexport class Customer {\n\n    public id?: number;\n    public email?: string;\n    public name?: string;\n    public age?: number;\n    public address?: string;\n    \n    public user?: User;\n\n}","export class User {\n\n    public id?: number;\n    public login?: string;\n    public password?: string;\n    public admin?: boolean;\n\n}"],"sourceRoot":""}